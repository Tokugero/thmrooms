- name: Start registry if not running
  community.docker.docker_container:
    image: registry:2
    name: "{{ cluster_name }}-registry"
    ports:
      - "127.0.0.1:5000:5000"
    restart_policy: always
    state: started
# - name: patch registry hosts list in nodes
# - name: add registry to container network
# - name: patch local registry cluster config

- name: Get containers
  command: kind get nodes --name {{ cluster_name }}
  register: kind_nodes

- name: Create nodes folders
  community.docker.docker_container_exec:
    container: "{{ item.1 }}"
    command: /bin/mkdir -p "/etc/containerd/certs.d/localhost:5000"
  with_indexed_items: "{{ kind_nodes.stdout_lines }}"

- name: Copy hosts.toml patch
  template:
    src: hosts.toml.j2
    dest: /tmp/hosts.toml

- name: Patch hosts.toml
  community.docker.docker_container_copy_into:
    container: "{{ item.1 }}"
    path: /tmp/hosts.toml
    container_path: /etc/containerd/certs.d/localhost:5000/hosts.toml
  with_indexed_items: "{{ kind_nodes.stdout_lines }}"

- name: Move container to kind bridge
  community.docker.docker_network:
    name: kind
    connected:
      - "{{ cluster_name }}-registry"
    appends: true

- name: Configure local registry in cluster
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: local-registry-hosting
        namespace: kube-public
      data:
        localRegistryHosting.v1: |
          host: localhost:5000
          help: https://kind.sigs.k8s.io/docs/user/local-registry/

- name: Reload containerd
  community.docker.docker_container_exec:
    container: "{{ item.1 }}"
    command: systemctl restart containerd
  with_indexed_items: "{{ kind_nodes.stdout_lines }}"
